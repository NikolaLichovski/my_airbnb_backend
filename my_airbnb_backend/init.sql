create table airbnb_users (
                              username                   varchar(255) primary key,
                              password                   varchar(255) not null,
                              name                       varchar(255) not null,
                              surname                    varchar(255) not null,
                              is_account_non_expired     boolean default true,
                              is_account_non_locked      boolean default true,
                              is_credentials_non_expired boolean default true,
                              is_enabled                 boolean default true,
                              role                       varchar(50) not null
);

create table countries (
                           id        bigint generated by default as identity primary key,
                           name      varchar(255) not null,
                           continent varchar(255) not null
);


create table hosts (
                       id         bigint generated by default as identity primary key,
                       name       varchar(255) not null,
                       surname    varchar(255) not null,
                       country_id bigint,

                       constraint fk_country foreign key (country_id) references countries(id) on delete cascade
);


create table accommodations (
                                id          bigint generated by default as identity primary key,
                                name        varchar(255) not null,
                                category    varchar(50) not null,
                                host_id     bigint,
                                num_rooms   integer,
                                is_rented   boolean default false,

                                constraint fk_host foreign key (host_id) references hosts(id) on delete cascade
);

create table availability (
                              id               bigint generated by default as identity primary key,
                              date_time_start  timestamp not null,
                              date_time_end    timestamp not null,
                              price            double precision not null,
                              accommodation_id bigint,

                              constraint fk_accommodation foreign key (accommodation_id) references accommodations(id) on delete cascade
);

create table temporary_reservations (
                                        id               bigint generated by default as identity primary key,
                                        user_id          varchar(255),
                                        accommodation_id bigint,

                                        constraint fk_temp_res_user foreign key (user_id) references airbnb_users(username) on delete cascade,
                                        constraint fk_temp_res_accommodation foreign key (accommodation_id) references accommodations(id) on delete cascade
);

create materialized view accommodations_per_host as
select h.id as host_id, count(a.id) as num_accommodations
from hosts h left join accommodations a on h.id = a.host_id
group by h.id;

create materialized view hosts_per_country as
select c.name as country_name, count(h.id) as host_count
from hosts h left join countries c on h.country_id = c.id
group by c.name;